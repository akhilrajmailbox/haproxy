global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http


listen webui 
        bind *:8888 
        stats enable 
        stats uri / 
        mode http 
        stats auth admin:admin 

#frontend vivasa
#        bind *:80
#        bind *:443 ssl crt /etc/haproxy/ssl/xip.io.pem
#        redirect scheme https if !{ ssl_fc }
#        mode http
#        option forwardfor


frontend www-http
   bind *:80
   reqadd X-Forwarded-Proto:\ http

frontend www-https
        bind *:443 ssl crt /etc/haproxy/ssl/xip.io.pem
        reqadd X-Forwarded-Proto:\ https
#       acl letsencrypt-acl path_beg /.well-known/acme-challenge/
#       use_backend letsencrypt-backend if letsencrypt-acl


acl git hdr(host) -i git.my.local
use_backend git if git

acl mvn hdr(host) -i mvn.my.local
use_backend mvn if mvn

acl nagios1 hdr(host) -i nagios1.my.local
use_backend nagios1 if nagios1

acl nagios2 hdr(host) -i nagios2.my.local
use_backend nagios2 if nagios2

acl jenkins hdr(host) -i jenkins.my.local
use_backend jenkins if jenkins


backend git
	redirect scheme https if !{ ssl_fc }
        server git-server 163.172.142.40:80 check

backend jenkins
        redirect scheme https if !{ ssl_fc }
        server jenkins-server 163.172.142.40:7070 check

backend mvn
        redirect scheme https if !{ ssl_fc }
        server mvn-server 163.172.142.40:9898 check

backend nagios1
	server nagios1-server 163.172.142.40:9889 check

backend nagios2
        server nagios2-server 163.172.181.95:9889 check
